def bindec(binary):
    decimal = 0
    sbin = str(binary)
    lbin = len(sbin)
    for x in range(lbin):
        last = sbin[(lbin-(x+1))]
        decimal += int(last)*(2**x)
    return(decimal)

def decbin(decimal):
    binary = 0
    count = 0
    while decimal > 0:
        conv = decimal%2
        decimal = decimal//2
        binary += conv * (10**count)
        count += 1
    return(binary)
    
def binadd(bin1, bin2):
    print(decbin(bindec(bin1) + bindec(bin2)))


def hexdec(hex):
    decimal = 0
    shex = str(hex)
    lhex = len(shex)
    for x in range(lhex):
        last = shex[(lhex-(x+1))]
        dlast = hexabet(last)
        decimal += int(dlast)*(16**x)
    print(decimal)

def hexabet(hex):
    hex = str(hex)
    if hex == 'a' or hex == 'A':
        return 10
    elif hex == 'b' or hex == 'B':
        return 11
    elif hex == 'c' or hex == 'C':
        return 12
    elif hex == 'd' or hex == 'D':
        return 13
    elif hex == 'e' or hex == 'E':
        return 14
    elif hex == 'f' or hex == 'F':
        return 15
    elif hex.isalpha() == True:
        return 0
    else:
        return hex

hexdec('ac3')
binadd(1011,1011)
